name: CI

on:
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/CI.yml"
      - "src/**"
  pull_request:
    branches: [ main ]
    paths:
      - ".github/workflows/CI.yml"
      - "src/**"

  workflow_dispatch:

jobs:
  prepare:
    runs-on: [ ubuntu-latest ]
    name: Determine Version
    outputs:
      version: ${{ github.ref == 'refs/heads/main' && steps.version_release.outputs.version || steps.version_prerelease.outputs.version }}
      version_tag : ${{ steps.version_release.outputs.version_tag }}
    permissions:
      contents: read
      statuses: write
      checks: write
    steps:
      - uses: actions/checkout@v4

      - name: Git Semantic Version Pre-Release
        uses: PaulHatch/semantic-version@v5.4.0
        id: version_prerelease
        with:
          version_format: "${major}.${minor}.${patch}-pre${increment}"
          change_path: "src"

      - name: Git Semantic Version Release
        uses: PaulHatch/semantic-version@v5.4.0
        id: version_release
        with:
          version_format: "${major}.${minor}.${patch}"
          change_path: "src"


  build:
    runs-on: [ ubuntu-latest ]
    needs: [ prepare ]
    name: Build and Test
    permissions:
      contents: read
      statuses: write
      checks: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./src
          sbom: true
          cache-from: bronneberg/photobooth-service:cache
          cache-to: bronneberg/photobooth-service:cache
          platforms: linux/amd64,linux/arm64
          push: true
          tags: bronneberg/photobooth-service:latest, bronneberg/photobooth-service:${{ needs.prepare.outputs.version }}

  vulnerability-test:
    name: Vulnerability Test
    needs: [ prepare, build ]
    runs-on: [ ubuntu-latest ]
    permissions:
      contents: read
      statuses: write
      checks: write

    steps:

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Pull Docker image from cache
        env:
          IMAGE_TAG: ${{ needs.prepare.outputs.version }}
        run: |
          docker pull bronneberg/photobooth-service:$IMAGE_TAG

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: bronneberg/photobooth-service:${{ needs.prepare.outputs.version }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"
  
  create-release:
    name: Create Release
    needs: [ prepare, build, vulnerability-test]
    runs-on: [ ubuntu-latest ]
    if: ${{ github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    permissions:
      id-token: write
      contents: write
        
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          tag_name: ${{ needs.prepare.outputs.version_tag  }}
          name: "Version ${{ needs.prepare.outputs.version }}"
          prerelease: false
          target_commitish: ${{ github.ref }}